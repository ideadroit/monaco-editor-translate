import{_ as a,c as i,o as e,a3 as s,a5 as t,a6 as l}from"./chunks/framework.CrxK02rG.js";const u=JSON.parse('{"title":"editor","description":"","frontmatter":{},"headers":[],"relativePath":"api/editor.md","filePath":"api/editor.md"}'),n={name:"api/editor.md"},r=s(`<h1 id="editor" tabindex="-1">editor <a class="header-anchor" href="#editor" aria-label="Permalink to &quot;editor&quot;">​</a></h1><details class="details custom-block"><summary>原文链接</summary><p><a href="https://microsoft.github.io/monaco-editor/docs.html#modules/editor.html" target="_blank" rel="noreferrer">https://microsoft.github.io/monaco-editor/docs.html#modules/editor.html</a></p></details><pre><code>editor 是 Monaco Editor 的核心模块，提供了编辑器实例的创建、销毁、获取、设置等功能。
</code></pre><h2 id="addcommand" tabindex="-1">addCommand <a class="header-anchor" href="#addcommand" aria-label="Permalink to &quot;addCommand&quot;">​</a></h2><ul><li><p>语法：<code>addCommand(descriptor:ICommandDescriptor): IDisposable</code></p></li><li><p>参数：<code>descriptor</code>: <a href="/api/editor/ICommandDescriptor.html">ICommandDescriptor</a></p></li><li><p>返回值：<code>IDisposable</code>:<a href="/api/IDisposable.html">IDisposable</a></p><p>返回值是一个IDisposable对象，调用dispose()方法可以移除命令。</p></li><li><p>描述：向编辑器命令服务添加命令处理器。</p></li><li><p>示例：</p></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// addCommand</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">editor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addCommand</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  id: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;command-123&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">  run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;执行了 command-123&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, args);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * Directly trigger a handler or an editor action.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> source</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> The source of the call.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> handlerId</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> The id of the handler or the id of a contribution.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> * </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">@param</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> payload</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> Extra data to be sent to the handler.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> */</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">myEditor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">trigger</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;command-123&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, { a: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> });</span></span></code></pre></div><ul><li>输出：</li></ul><p><img src="`+t+`"></p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>目前我也还未知 source 的作用哈！</p><p>create 的返回值也有一个 addCommand 方法，用法是完全不一样的，大家注意区分！后面会详细说</p></div><h2 id="addeditoraction" tabindex="-1">addEditorAction <a class="header-anchor" href="#addeditoraction" aria-label="Permalink to &quot;addEditorAction&quot;">​</a></h2><ul><li><p>语法：<code>addEditorAction(descriptor): IDisposable</code></p></li><li><p>参数：<code>descriptor</code>: <a href="/api/editor/IActionDescriptor.html">IActionDescriptor</a></p></li><li><p>返回值：<code>IDisposable</code>:<a href="/api/IDisposable.html">IDisposable</a></p><p>返回值是一个IDisposable对象，调用dispose()方法可以移除命令。</p></li><li><p>描述：向所有编辑器添加一个操作。</p></li><li><p>示例：</p></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">editor.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEditorAction</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">({</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    id: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;action123&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 唯一ID</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    label: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;action123&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 显示的名称</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    keybindings: [KeyMod.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">chord</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(KeyMod.CtrlCmd </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> KeyCode.KeyM),],   </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 快捷键</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    contextMenuOrder: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 操作在菜单中的显示顺序</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 指定操作应显示在上下文菜单的哪个组中 navigation表示默认组 </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    // 可选值 navigation | 1_modification | 9_cutcopypaste</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    contextMenuGroupId: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;navigation&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">    run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: (</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">args</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;执行了 action123&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, args);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  });</span></span></code></pre></div><ul><li>输出：</li></ul><p><img src="`+l+'"></p><details class="details custom-block"><summary>传送门</summary><p><a href="/api/KeyMod.html">KeyMod.chord 快捷键</a></p></details><h2 id="addkeybindingrule" tabindex="-1">addKeybindingRule <a class="header-anchor" href="#addkeybindingrule" aria-label="Permalink to &quot;addKeybindingRule&quot;">​</a></h2><h2 id="addkeybindingrules" tabindex="-1">addKeybindingRules <a class="header-anchor" href="#addkeybindingrules" aria-label="Permalink to &quot;addKeybindingRules&quot;">​</a></h2><h2 id="colorize" tabindex="-1">colorize <a class="header-anchor" href="#colorize" aria-label="Permalink to &quot;colorize&quot;">​</a></h2><h2 id="colorizeelement" tabindex="-1">colorizeElement <a class="header-anchor" href="#colorizeelement" aria-label="Permalink to &quot;colorizeElement&quot;">​</a></h2><h2 id="colorizemodelline" tabindex="-1">colorizeModelLine <a class="header-anchor" href="#colorizemodelline" aria-label="Permalink to &quot;colorizeModelLine&quot;">​</a></h2><h2 id="create" tabindex="-1">create <a class="header-anchor" href="#create" aria-label="Permalink to &quot;create&quot;">​</a></h2><h2 id="creatediffeditor" tabindex="-1">createDiffEditor <a class="header-anchor" href="#creatediffeditor" aria-label="Permalink to &quot;createDiffEditor&quot;">​</a></h2><h2 id="createmodel" tabindex="-1">createModel <a class="header-anchor" href="#createmodel" aria-label="Permalink to &quot;createModel&quot;">​</a></h2><h2 id="createmultifilediffeditor" tabindex="-1">createMultiFileDiffEditor <a class="header-anchor" href="#createmultifilediffeditor" aria-label="Permalink to &quot;createMultiFileDiffEditor&quot;">​</a></h2><h2 id="createwebworker" tabindex="-1">createWebWorker <a class="header-anchor" href="#createwebworker" aria-label="Permalink to &quot;createWebWorker&quot;">​</a></h2><h2 id="definetheme" tabindex="-1">defineTheme <a class="header-anchor" href="#definetheme" aria-label="Permalink to &quot;defineTheme&quot;">​</a></h2><h2 id="getdiffeditors" tabindex="-1">getDiffEditors <a class="header-anchor" href="#getdiffeditors" aria-label="Permalink to &quot;getDiffEditors&quot;">​</a></h2><h2 id="geteditors" tabindex="-1">getEditors <a class="header-anchor" href="#geteditors" aria-label="Permalink to &quot;getEditors&quot;">​</a></h2><h2 id="getmodel" tabindex="-1">getModel <a class="header-anchor" href="#getmodel" aria-label="Permalink to &quot;getModel&quot;">​</a></h2><h2 id="getmodelmarkers" tabindex="-1">getModelMarkers <a class="header-anchor" href="#getmodelmarkers" aria-label="Permalink to &quot;getModelMarkers&quot;">​</a></h2><h2 id="getmodels" tabindex="-1">getModels <a class="header-anchor" href="#getmodels" aria-label="Permalink to &quot;getModels&quot;">​</a></h2><h2 id="ondidchangemarkers" tabindex="-1">onDidChangeMarkers <a class="header-anchor" href="#ondidchangemarkers" aria-label="Permalink to &quot;onDidChangeMarkers&quot;">​</a></h2><h2 id="ondidchangemodellanguage" tabindex="-1">onDidChangeModelLanguage <a class="header-anchor" href="#ondidchangemodellanguage" aria-label="Permalink to &quot;onDidChangeModelLanguage&quot;">​</a></h2><h2 id="ondidcreatediffeditor" tabindex="-1">onDidCreateDiffEditor <a class="header-anchor" href="#ondidcreatediffeditor" aria-label="Permalink to &quot;onDidCreateDiffEditor&quot;">​</a></h2><h2 id="ondidcreateeditor" tabindex="-1">onDidCreateEditor <a class="header-anchor" href="#ondidcreateeditor" aria-label="Permalink to &quot;onDidCreateEditor&quot;">​</a></h2><h2 id="ondidcreatemodel" tabindex="-1">onDidCreateModel <a class="header-anchor" href="#ondidcreatemodel" aria-label="Permalink to &quot;onDidCreateModel&quot;">​</a></h2><h2 id="onwilldisposemodel" tabindex="-1">onWillDisposeModel <a class="header-anchor" href="#onwilldisposemodel" aria-label="Permalink to &quot;onWillDisposeModel&quot;">​</a></h2><h2 id="registercommand" tabindex="-1">registerCommand <a class="header-anchor" href="#registercommand" aria-label="Permalink to &quot;registerCommand&quot;">​</a></h2><h2 id="registereditoropener" tabindex="-1">registerEditorOpener <a class="header-anchor" href="#registereditoropener" aria-label="Permalink to &quot;registerEditorOpener&quot;">​</a></h2><h2 id="registerlinkopener" tabindex="-1">registerLinkOpener <a class="header-anchor" href="#registerlinkopener" aria-label="Permalink to &quot;registerLinkOpener&quot;">​</a></h2><h2 id="remeasurefonts" tabindex="-1">remeasureFonts <a class="header-anchor" href="#remeasurefonts" aria-label="Permalink to &quot;remeasureFonts&quot;">​</a></h2><h2 id="removeallmarkers" tabindex="-1">removeAllMarkers <a class="header-anchor" href="#removeallmarkers" aria-label="Permalink to &quot;removeAllMarkers&quot;">​</a></h2><h2 id="setmodellanguage" tabindex="-1">setModelLanguage <a class="header-anchor" href="#setmodellanguage" aria-label="Permalink to &quot;setModelLanguage&quot;">​</a></h2><h2 id="setmodelmarkers" tabindex="-1">setModelMarkers <a class="header-anchor" href="#setmodelmarkers" aria-label="Permalink to &quot;setModelMarkers&quot;">​</a></h2><h2 id="settheme" tabindex="-1">setTheme <a class="header-anchor" href="#settheme" aria-label="Permalink to &quot;setTheme&quot;">​</a></h2><h2 id="tokenize" tabindex="-1">tokenize <a class="header-anchor" href="#tokenize" aria-label="Permalink to &quot;tokenize&quot;">​</a></h2>',46),h=[r];function d(o,p,k,c,E,g){return e(),i("div",null,h)}const y=a(n,[["render",d]]);export{u as __pageData,y as default};
